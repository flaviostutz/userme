{
	"info": {
		"_postman_id": "bdf5e5b0-4004-4a77-b2c6-e2e0a798b688",
		"name": "userme-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PUT /user/:email",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0b960a75-c9aa-4de3-a85f-31c174e899a1",
						"exec": [
							"pm.test(\"Activation Token for tests present\", function () {",
							"    pm.response.to.have.header(\"Test-Token\");",
							"});",
							"pm.test(\"Status is 250\", function () {",
							"    pm.response.to.have.status(250);",
							"});",
							"const activationToken = pm.response.headers.get(\"Test-Token\")",
							"postman.setEnvironmentVariable(\"activationToken\", activationToken);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "12c2fb45-4b46-41b3-9bbc-d3d0fca69ac8",
						"exec": [
							"postman.setEnvironmentVariable(\"email1\", 'test' + Math.round(Math.random() * 99999999)+ \"@test.com\");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"password\": \"testtest\",\n\t\"name\": \"{{email1}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{usermeHost}}/user/{{email1}}",
					"host": [
						"{{usermeHost}}"
					],
					"path": [
						"user",
						"{{email1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /user/:email/activate",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6e8778d1-8ad4-46f4-80a1-e53c1d020918",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"})",
							"",
							"pm.test(\"Account details returned\", function () {",
							"    pm.expect(jsonData).to.have.property('email');",
							"    pm.expect(jsonData).to.have.property('message');",
							"    pm.expect(jsonData).to.have.property('name');",
							"})",
							"",
							"pm.test(\"Access and refresh tokens returned\", function () {",
							"    pm.expect(jsonData).to.have.property('accessToken');",
							"    pm.expect(jsonData).to.have.property('accessTokenExpiration');",
							"    pm.expect(jsonData).to.have.property('refreshToken');",
							"    pm.expect(jsonData).to.have.property('refreshTokenExpiration');",
							"})",
							"",
							"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);",
							"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{activationToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{usermeHost}}/user/{{email1}}/activate",
					"host": [
						"{{usermeHost}}"
					],
					"path": [
						"user",
						"{{email1}}",
						"activate"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3e7e650e-9570-43d1-bb60-7579d9868c1b",
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Token claims present\", function () {",
							"    pm.expect(jsonData).to.have.property('typ');",
							"    pm.expect(jsonData).to.have.property('sub');",
							"    pm.expect(jsonData).to.have.property('exp');",
							"    pm.expect(jsonData).to.have.property('jti');",
							"})",
							"",
							"pm.test(\"Token sub=={{mail1}}\", function () {",
							"    pm.expect(jsonData.sub).to.eql(postman.getEnvironmentVariable(\"email1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{usermeHost}}/token",
					"host": [
						"{{usermeHost}}"
					],
					"path": [
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "355a23fc-d4f7-4491-8215-09e9d9ffdcfa",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test(\"Account details returned\", function () {",
							"    pm.expect(jsonData).to.have.property('email');",
							"    pm.expect(jsonData).to.have.property('name');",
							"})",
							"",
							"pm.test(\"Access and refresh tokens returned\", function () {",
							"    pm.expect(jsonData).to.have.property('accessToken');",
							"    pm.expect(jsonData).to.have.property('accessTokenExpiration');",
							"    pm.expect(jsonData).to.have.property('refreshToken');",
							"    pm.expect(jsonData).to.have.property('refreshTokenExpiration');",
							"})",
							"",
							"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);",
							"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"email\": \"{{email1}}\",\n\t\"password\": \"testtest\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{usermeHost}}/token",
					"host": [
						"{{usermeHost}}"
					],
					"path": [
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /token/refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aa501880-8277-40f8-9e14-004d3f68b9a7",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Account details returned\", function () {",
							"    pm.expect(jsonData).to.have.property('email');",
							"    pm.expect(jsonData).to.have.property('name');",
							"})",
							"",
							"pm.test(\"Access and refresh tokens returned\", function () {",
							"    pm.expect(jsonData).to.have.property('accessToken');",
							"    pm.expect(jsonData).to.have.property('accessTokenExpiration');",
							"    pm.expect(jsonData).to.have.property('refreshToken');",
							"    pm.expect(jsonData).to.have.property('refreshTokenExpiration');",
							"})",
							"",
							"postman.setEnvironmentVariable(\"accessToken\", jsonData.accessToken);",
							"postman.setEnvironmentVariable(\"refreshToken\", jsonData.refreshToken);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{refreshToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{usermeHost}}/token/refresh",
					"host": [
						"{{usermeHost}}"
					],
					"path": [
						"token",
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /user/:email/password-change",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c21b277-6b10-443b-9abe-f4f945d4229f",
						"exec": [
							"pm.test(\"Status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"password\": \"testtest2\",\n\t\"currentPassword\": \"testtest\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{usermeHost}}/user/{{email1}}/password-change",
					"host": [
						"{{usermeHost}}"
					],
					"path": [
						"user",
						"{{email1}}",
						"password-change"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /user/:email/password-reset-request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e6d7edff-223d-471c-8889-c1b5091d43a1",
						"exec": [
							"pm.test(\"Status is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							"",
							"pm.test(\"Password Reset Token for tests present\", function () {",
							"    pm.response.to.have.header(\"Test-Token\");",
							"});",
							"",
							"const activationToken = pm.response.headers.get(\"Test-Token\")",
							"postman.setEnvironmentVariable(\"passwordResetToken\", activationToken);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{usermeHost}}/user/{{email1}}/password-reset-request",
					"host": [
						"{{usermeHost}}"
					],
					"path": [
						"user",
						"{{email1}}",
						"password-reset-request"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /user/:email/password-reset-change",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a972b698-9669-48a0-999c-74c2e293bcb3",
						"exec": [
							"pm.test(\"Status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{passwordResetToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"password\": \"testtest\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{usermeHost}}/user/{{email1}}/password-reset-change",
					"host": [
						"{{usermeHost}}"
					],
					"path": [
						"user",
						"{{email1}}",
						"password-reset-change"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}